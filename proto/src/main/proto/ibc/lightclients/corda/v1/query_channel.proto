syntax = "proto3";
package ibc.lightclients.corda.v1;

option go_package = "github.com/hyperledger-labs/yui-corda-ibc/go/x/ibc/light-clients/xx-corda/types";

import "ibc/core/channel/v1/query.proto";
import "ibc/lightclients/corda/v1/corda-types.proto";

service ChannelQuery {
  rpc Channel(QueryChannelRequest) returns (QueryChannelResponse);
  rpc Channels(QueryChannelsRequest) returns (QueryChannelsResponse);
  rpc ConnectionChannels(QueryConnectionChannelsRequest) returns (QueryConnectionChannelsResponse);
  rpc ChannelClientState(QueryChannelClientStateRequest) returns (QueryChannelClientStateResponse);
  rpc ChannelConsensusState(QueryChannelConsensusStateRequest) returns (QueryChannelConsensusStateResponse);
  rpc PacketCommitment(QueryPacketCommitmentRequest) returns (QueryPacketCommitmentResponse);
  rpc PacketCommitments(QueryPacketCommitmentsRequest) returns (QueryPacketCommitmentsResponse);
  rpc PacketReceipt(QueryPacketReceiptRequest) returns (QueryPacketReceiptResponse);
  rpc PacketAcknowledgement(QueryPacketAcknowledgementRequest) returns (QueryPacketAcknowledgementResponse);
  rpc PacketAcknowledgements(QueryPacketAcknowledgementsRequest) returns (QueryPacketAcknowledgementsResponse);
  rpc UnreceivedPackets(QueryUnreceivedPacketsRequest) returns (QueryUnreceivedPacketsResponse);
  rpc UnreceivedAcks(QueryUnreceivedAcksRequest) returns (QueryUnreceivedAcksResponse);
  rpc NextSequenceReceive(QueryNextSequenceReceiveRequest) returns (QueryNextSequenceReceiveResponse);
}

message QueryChannelRequest {
  ibc.core.channel.v1.QueryChannelRequest request = 1;
  StateRef base_id = 2;
}

message QueryChannelResponse {
  ibc.core.channel.v1.QueryChannelResponse response = 1;
}

message QueryChannelsRequest {
  ibc.core.channel.v1.QueryChannelsRequest request = 1;
  StateRef base_id = 2;
}

message QueryChannelsResponse {
  ibc.core.channel.v1.QueryChannelsResponse response = 1;
}

message QueryConnectionChannelsRequest {
  ibc.core.channel.v1.QueryConnectionChannelsRequest request = 1;
  StateRef base_id = 2;
}

message QueryConnectionChannelsResponse {
  ibc.core.channel.v1.QueryConnectionChannelsResponse response = 1;
}

message QueryChannelClientStateRequest {
  ibc.core.channel.v1.QueryChannelClientStateRequest request = 1;
  StateRef base_id = 2;
}

message QueryChannelClientStateResponse {
  ibc.core.channel.v1.QueryChannelClientStateResponse response = 1;
}

message QueryChannelConsensusStateRequest {
  ibc.core.channel.v1.QueryChannelConsensusStateRequest request = 1;
  StateRef base_id = 2;
}

message QueryChannelConsensusStateResponse {
  ibc.core.channel.v1.QueryChannelConsensusStateResponse response = 1;
}

message QueryPacketCommitmentRequest {
  ibc.core.channel.v1.QueryPacketCommitmentRequest request = 1;
  StateRef base_id = 2;
}

message QueryPacketCommitmentResponse {
  ibc.core.channel.v1.QueryPacketCommitmentResponse response = 1;
}

message QueryPacketCommitmentsRequest {
  ibc.core.channel.v1.QueryPacketCommitmentsRequest request = 1;
  StateRef base_id = 2;
}

message QueryPacketCommitmentsResponse {
  ibc.core.channel.v1.QueryPacketCommitmentsResponse response = 1;
}

message QueryPacketReceiptRequest {
  ibc.core.channel.v1.QueryPacketReceiptRequest request = 1;
  StateRef base_id = 2;
}

message QueryPacketReceiptResponse {
  ibc.core.channel.v1.QueryPacketReceiptResponse response = 1;
}

message QueryPacketAcknowledgementRequest {
  ibc.core.channel.v1.QueryPacketAcknowledgementRequest request = 1;
  StateRef base_id = 2;
}

message QueryPacketAcknowledgementResponse {
  ibc.core.channel.v1.QueryPacketAcknowledgementResponse response = 1;
}

message QueryPacketAcknowledgementsRequest {
  ibc.core.channel.v1.QueryPacketAcknowledgementsRequest request = 1;
  StateRef base_id = 2;
}

message QueryPacketAcknowledgementsResponse {
  ibc.core.channel.v1.QueryPacketAcknowledgementsResponse response = 1;
}

message QueryUnreceivedPacketsRequest {
  ibc.core.channel.v1.QueryUnreceivedPacketsRequest request = 1;
  StateRef base_id = 2;
}

message QueryUnreceivedPacketsResponse {
  ibc.core.channel.v1.QueryUnreceivedPacketsResponse response = 1;
}

message QueryUnreceivedAcksRequest {
  ibc.core.channel.v1.QueryUnreceivedAcksRequest request = 1;
  StateRef base_id = 2;
}

message QueryUnreceivedAcksResponse {
  ibc.core.channel.v1.QueryUnreceivedAcksResponse response = 1;
}

message QueryNextSequenceReceiveRequest {
  ibc.core.channel.v1.QueryNextSequenceReceiveRequest request = 1;
  StateRef base_id = 2;
}

message QueryNextSequenceReceiveResponse {
  ibc.core.channel.v1.QueryNextSequenceReceiveResponse response = 1;
}
