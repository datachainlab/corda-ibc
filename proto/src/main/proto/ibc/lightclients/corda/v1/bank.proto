syntax = "proto3";
package ibc.lightclients.corda.v1;

option go_package = "github.com/hyperledger-labs/yui-corda-ibc/go/x/ibc/light-clients/xx-corda/types";
option java_outer_classname = "BankProto";

import "ibc/lightclients/corda/v1/corda-types.proto";

service BankService {
  // transactions
  rpc CreateBank (CreateBankRequest) returns (CreateBankResponse);
  rpc AllocateFund (AllocateFundRequest) returns (AllocateFundResponse);

  // queries
  rpc QueryBank (QueryBankRequest) returns (QueryBankResponse);
}

message Bank {
  message BalanceMapPerDenom {
    map<string, string> pubkey_to_amount = 1;
  }

  message BalanceMap {
    map<string, BalanceMapPerDenom> denom_to_map = 1;
  }

  message IbcDenomMap {
    map<string, string> ibc_denom_to_denom = 1;
  }

  repeated Party participants = 1;
  StateRef base_id = 2;
  BalanceMap allocated = 3;
  BalanceMap locked = 4;
  BalanceMap minted = 5;
  IbcDenomMap denoms = 6;
}

message CreateBankRequest {
  StateRef base_id = 1;
}

message CreateBankResponse {
  bytes proof = 1;
}

message AllocateFundRequest {
  StateRef base_id = 1;
  string owner = 2;
  string denom = 3;
  string amount = 4;
}

message AllocateFundResponse {
  bytes proof = 1;
}

message QueryBankRequest {
  StateRef base_id = 1;
}

message QueryBankResponse {
  Bank bank = 1;
}
