syntax = "proto3";
package ibc.lightclients.corda.v1;

option go_package = "github.com/hyperledger-labs/yui-corda-ibc/go/x/ibc/light-clients/xx-corda/types";

import "ibc/core/connection/v1/tx.proto";
import "ibc/lightclients/corda/v1/corda-types.proto";

service ConnectionMsg {
  rpc ConnectionOpenInit(MsgConnectionOpenInit) returns (MsgConnectionOpenInitResponse);
  rpc ConnectionOpenTry(MsgConnectionOpenTry) returns (MsgConnectionOpenTryResponse);
  rpc ConnectionOpenAck(MsgConnectionOpenAck) returns (MsgConnectionOpenAckResponse);
  rpc ConnectionOpenConfirm(MsgConnectionOpenConfirm) returns (MsgConnectionOpenConfirmResponse);
}

message MsgConnectionOpenInit {
  ibc.core.connection.v1.MsgConnectionOpenInit request = 1;
  StateRef base_id = 2;
}

message MsgConnectionOpenInitResponse {
  ibc.core.connection.v1.MsgConnectionOpenInitResponse response = 1;
  bytes proof = 2;
  string connection_id = 3;
}

message MsgConnectionOpenTry {
  ibc.core.connection.v1.MsgConnectionOpenTry request = 1;
  StateRef base_id = 2;
}

message MsgConnectionOpenTryResponse {
  ibc.core.connection.v1.MsgConnectionOpenTryResponse response = 1;
  bytes proof = 2;
  string connection_id = 3;
}

message MsgConnectionOpenAck {
  ibc.core.connection.v1.MsgConnectionOpenAck request = 1;
  StateRef base_id = 2;
}

message MsgConnectionOpenAckResponse {
  ibc.core.connection.v1.MsgConnectionOpenAckResponse response = 1;
  bytes proof = 2;
}

message MsgConnectionOpenConfirm {
  ibc.core.connection.v1.MsgConnectionOpenConfirm request = 1;
  StateRef base_id = 2;
}

message MsgConnectionOpenConfirmResponse {
  ibc.core.connection.v1.MsgConnectionOpenConfirmResponse response = 1;
  bytes proof = 2;
}
